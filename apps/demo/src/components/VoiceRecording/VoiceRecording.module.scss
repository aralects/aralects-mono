@use '../../sass/style.scss';
@use '../../sass/mixins.scss';
@use '../../sass/variables.scss';

// :root{
//     --vh: 1vh;
// }

.container {
    // position: absolute;
    width: 100%;
    // bottom: calc(100vh - 560px);
    text-align: center;
    box-sizing: border-box;
    z-index: 100000;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 16px;
    // flex: 1;
    // margin-bottom: env(safe-area-inset-bottom);
    // min-height: -webkit-fill-available;
    margin-bottom: env(safe-area-inset-bottom);
    // padding: 20px 0;

    position: absolute;
    bottom: calc(env(safe-area-inset-bottom) + 6rem);

    @media #{variables.$mobile} {
        position: absolute;
        bottom: calc(env(safe-area-inset-bottom) + 4rem);
        gap: 4px;
        // padding-bottom: env(safe-area-inset-bottom);
        // margin-bottom: env(safe-area-inset-bottom);
        // position: fixed;
        // bottom: env(safe-area-inset-bottom);

        
    }
    // touch-action: none;  
    // -webkit-tap-highlight-color: transparent;
}

// .recordingBackground {
//     position: absolute;
//     width: 100vw;
//     height: 2000px;
//     top: -1500px;
//     background-color: black;
//     opacity: 0.1;
//     z-index: 99999;
// }

.mic {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background-color: #8262B0;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none; 
    user-select: none; 
    -webkit-user-select: none; 

    &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    &.recording {
        z-index: 1000;
        transition: all ease-in-out 0.2s;    
        width: 100px;
        height: 100px;
        animation: pulse 2s infinite;
    }

    &.initializing {
        z-index: 1000;
        transition: all ease-in-out 0.2s;
        width: 100px;
        height: 100px;
        animation: initPulse 1.5s infinite;
        background-color: #8262B0;
    }

    &:active {
        transform: scale(0.95);
    }
    // touch-action: none;
    // -webkit-user-select: none;
    // user-select: none;
    
    // &:focus {
    //     outline: none;
    // }
}

// @keyframes pulse {
//     0% {
//         box-shadow: 0 0 0 0 rgba(255, 75, 75, 0.4);
//     }
//     70% {
//         box-shadow: 0 0 0 20px rgba(255, 75, 75, 0);
//     }
//     100% {
//         box-shadow: 0 0 0 0 rgba(255, 75, 75, 0);
//     }
// }

.micTitle {
    font-size: 1rem;
    text-align: center;
    margin-bottom: 0.5rem;
}

.recordingHint {
    font-size: 0.875rem;
    color: #666;
    text-align: center;
    margin-bottom: 1rem;
    
    &.warning {
        color: #ef4444;
    }
}

.barsContainer {
    width: 100%;
    @include mixins.flex($direction: row, $justify_content: center);
}

.bar {
    width: 15px;
    min-height: 15px;
    margin: 0 5px;
    background-color: variables.$white;
    border-radius: 25px;
}

.recordingDuration {
    font-size: 0.875rem;
    color: #666;
    margin-top: 0.5rem;
    text-align: center;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-4px); }
    75% { transform: translateX(4px); }
}

.recordingStatus {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.timer {
  color: #8262B0;
  font-weight: 600;
  font-size: 1rem;
  min-width: 100px;
  text-align: center;
  display: inline-block;
}

.minTimeHint {
  font-size: 0.875rem;
  color: #6b7280; // gray-500
  opacity: 0.8;
}

.micContainer {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.recordingRipple {
  position: absolute;
  inset: -8px;
  
  .ripple {
    position: absolute;
    inset: 0;
    border: 2px solid #8262B0;
    border-radius: 50%;
    animation: ripple 1.5s cubic-bezier(0, 0.2, 0.8, 1) infinite;
  }
}

.mic {
  background: #8262B0;
  
  &.notReady {
    background: var(--error-color, #dc2626); // Using error color or fallback to red-600
  }
  
  &.recording {
    transform: scale(1.1);
  }
}

@keyframes ripple {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  100% {
    transform: scale(1.4);
    opacity: 0;
  }
}